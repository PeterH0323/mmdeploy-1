globals:
  codebase_name: mmdet
  codebase_dir: ../mmdetection
  checkpoint_force_download: False
  checkpoint_dir: ../mmdeploy_checkpoints
  images:
    img_coco_320x320: &img_coco_320x320 ./tests/data/tiger.jpeg
    img_coco_300x300: &img_coco_300x300
    img_coco_800x1344: &img_coco_800x1344
    img_blank: &img_blank
  dataset_path:
    COCO:
      image:
      annotation:
  metric_info: &metric_info
    box AP: # named after metafile.Metric
      eval_name: bbox # test.py --metrics args
      metric_key: bbox_mAP # eval OrderedDict key name
      tolerance: 0.1
    mask AP:
      eval_name: segm
      metric_key: '?'
      tolerance: 0.1
    PQ:
      eval_name: proposal
      metric_key: '?'
      tolerance: 0.1
  convert_image: &convert_image
    input_img: *img_coco_320x320
    test_img: *img_coco_300x300
  backend_test: &default_backend_test True
  sdk:
    sdk_dynamic_fp32: &sdk_dynamic_fp32 configs/mmdet/detection/detection_sdk_dynamic.py

onnxruntime:
  pipeline_ort_static_fp32: &pipeline_ort_static_fp32
    convert_image: *convert_image
    deploy_config: configs/mmdet/detection/detection_onnxruntime_static.py

  pipeline_ort_dynamic_fp32: &pipeline_ort_dynamic_fp32
    convert_image: *convert_image
    deploy_config: configs/mmdet/detection/detection_onnxruntime_dynamic.py

tensorrt:
  pipeline_trt_static_fp32: &pipeline_trt_static_fp32
    convert_image: *convert_image
    backend_test: *default_backend_test
    deploy_config: configs/mmdet/detection/detection_tensorrt_static-800x1344.py

  pipeline_trt_dynamic_fp32: &pipeline_trt_dynamic_fp32
    convert_image: *convert_image
    backend_test: *default_backend_test
    sdk_config: *sdk_dynamic_fp32
    deploy_config: configs/mmdet/detection/detection_tensorrt_dynamic-320x320-1344x1344.py

  pipeline_trt_dynamic_fp16: &pipeline_trt_dynamic_fp16
    convert_image: *convert_image
    backend_test: *default_backend_test
    sdk_config: *sdk_dynamic_fp32
    deploy_config: configs/mmdet/detection/detection_tensorrt-fp16_dynamic-320x320-1344x1344.py

  pipeline_trt_dynamic_int8: &pipeline_trt_dynamic_int8
    convert_image: *convert_image
    backend_test: *default_backend_test
    sdk_config: *sdk_dynamic_fp32
    deploy_config: configs/mmdet/detection/detection_tensorrt-int8_dynamic-300x300-512x512.py

openvino:
ncnn:
pplnn:
torchscript:


models:
  - name: retinanet
    codebase_model_config_dir: ./configs/retinanet
    metafile: configs/retinanet/metafile.yml
    model_configs:
      - retinanet_r50_fpn_1x_coco.py
    pipelines:
      - *pipeline_ort_dynamic_fp32
      - *pipeline_trt_dynamic_fp16
